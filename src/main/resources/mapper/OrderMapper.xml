<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.OrderMapper">
    <select id="getOrder" parameterType="int" resultType="Order">
        select
            billaddr1 as billAddress1,
            billaddr2 as billAddress2,
            billCity,
            billCountry,
            billState,
            billToFirstName,
            billToLastName,
            billZip,
            shipaddr1 as shipAddress1,
            shipaddr2 as shipAddress2,
            shipCity,
            shipCountry,
            shipState,
            shipToFirstname,
            shipToLastName,
            shipZip,
            cardtype,
            courier,
            creditCard,
            exprdate as expiryDate,
            locale,
            orderDate,
            orders.orderId,
            totalPrice,
            userId as username,
            status
        from orders, orderstatus
        where orders.orderId = #{orderId}
            and orders.orderId = orderStatus.orderId
    </select>
    
    <select id="getOrdersByUsername" parameterType="string" resultType="Order">
        select
            billaddr1 as billAddress1,
            billaddr2 as billAddress2,
            billCity,
            billCountry,
            billState,
            billToFirstName,
            billToLastName,
            billZip,
            shipaddr1 as shipAddress1,
            shipaddr2 as shipAddress2,
            shipCity,
            shipCountry,
            shipState,
            shipToFirstname,
            shipToLastName,
            shipZip,
            cardtype,
            courier,
            creditCard,
            exprdate as expireDate,
            locale,
            orderDate,
            orders.orderId,
            totalPrice,
            userId as username,
            status
        from orders, orderStatus
        where orders.userId = #{username}
            and orders.orderId = orderStatus.orderid
        order by orderDate
    </select>

    <select id="getAllOrders" resultType="Order">
         select
            billaddr1 as billAddress1,
            billaddr2 as billAddress2,
            billCity,
            billCountry,
            billState,
            billToFirstName,
            billToLastName,
            billZip,
            shipaddr1 as shipAddress1,
            shipaddr2 as shipAddress2,
            shipCity,
            shipCountry,
            shipState,
            shipToFirstname,
            shipToLastName,
            shipZip,
            cardtype,
            courier,
            creditCard,
            exprdate as expireDate,
            locale,
            orderDate,
            orders.orderId,
            totalPrice,
            userId as username,
            status
        from orders, orderStatus
        where orders.orderId = orderStatus.orderid
        order by orderDate
    </select>

    <insert id="insertOrder" parameterType="Order">
        insert into orders(
            orderId,
            userId,
            orderDate,
            shipaddr1,
            shipaddr2,
            shipCity,
            shipState,
            shipZip,
            shipCountry,
            billaddr1,
            billaddr2,
            billCity,
            billState,
            billZip,
            billCountry,
            courier,
            totalprice,
            billToFirstName,
            billToLastName,
            shipToFirstName,
            shipToLastName,
            creditCard,
            exprDate,
            cardType,
            locale)
        value(
            #{orderId},
            #{username},
            #{orderDate},
            #{shipAddress1},
            #{shipAddress2,jdbcType=VARCHAR},
            #{shipCity},
            #{shipState},
            #{shipZip},
            #{shipCountry},
            #{billAddress1},
            #{billAddress2,jdbcType=VARCHAR},
            #{billCity},
            #{billState},
            #{billZip},
            #{billCountry},
            #{courier},
            #{totalPrice},
            #{billToFirstName},
            #{billToLastName},
            #{shipToFirstName},
            #{shipToLastName},
            #{creditCard},
            #{expiryDate},
            #{cardType},
            #{locale})
    </insert>
    
    <insert id="insertOrderStatus" parameterType="Order">
        insert into orderStatus(
            orderid,
            timeStamp,
            status)
        values(
            #{orderId,jdbcType=NUMERIC},
            #{orderDate,jdbcType=TIMESTAMP},
            #{status,jdbcType=VARCHAR})
    </insert>

    <update id="updateOrder" parameterType="Order">
        update order set
            orderId =  #{orderId},
            userId = #{username},
            orderDate = #{orderDate},
            shipaddr1 = #{shipAddress1},
            shipaddr2 = #{shipAddress2},
            shipCity = #{shipCity},
            shipState = #{shipState},
            shipZip = #{shipZip},
            shipCountry = #{shipCountry},
            billaddr1 = #{billAddress1},
            billaddr2 = #{billAddress2},
            billCity = #{billCity},
            billState = #{billState},
            billZip = #{billZip},
            billCountry = #{billCountry},
            courier = #{courier},
            totalprice = #{totalPrice},
            billToFirstName = #{billToFirstName},
            billToLastName = #{billToLastName},
            shipToFirstName = #{shipToFirstName},
            shipToLastName = #{shipToLastName},
            creditCard = #{creditCard},
            exprDate = #{expiryDate},
            cardType = #{cardType},
            locale = #{locale}
        where orderId =  #{orderId}
    </update>

    <update id="updateOrderStatus" parameterType="Order">
        update orderStatus set
            orderId = #{orderId},
            timestamp = #{orderDate},
            status = #{status}
        where orderId = #{orderId}
    </update>

    <delete id="delOrderByOrderId" parameterType="string">
        delete from orders where orderId = #{orderId}
    </delete>

    <delete id="delOrderStatusByOrderId"  parameterType="string">
        delete from orderstatus where orderId = #{orderid}
    </delete>

    <select id="getSoldItemQuantityByItemId" resultType="int">
        select
        sum(lineItem)
        from orderitem
        where itemId = #{itemId}
    </select>
</mapper>