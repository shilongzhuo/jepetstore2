<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.mypetstore.persistence.AccountMapper">

    <select id="getAccountByUsername" parameterType="string" resultType="Account">
        select 
            signon.username,
            account.email,
            account.firstName,
            account.lastName,
            account.status,
            account.addr1 as address1,
            account.addr2 as address2,
            account.city,
            account.state,
            account.zip,
            account.country,
            account.phone,
            profile.langpref as languagePreference,
            profile.favcategory as favouriteCategoryId,
            profile.mylistopt as listOption,
            profile.banneropt as bannerOption,
            bannerdata.bannername
        from account, profile, signon, bannerdata
        where account.userId = #{username}
            and signon.username = account.userId
            and profile.userId = account.userId
            and profile.favcategory = bannerdata.favcategory
    </select>
    
    <select id="getAccountByUsernameAndPassword" parameterType="string" resultType="Account">
        select
            signon.username,
            account.email,
            account.firstName,
            account.lastName,
            account.status,
            account.addr1 as address1,
            account.addr2 as address2,
            account.city,
            account.state,
            account.zip,
            account.country,
            account.phone,
            profile.langpref as languagePreference,
            profile.favcategory as favouriteCategoryId,
            profile.mylistopt as listOption,
            profile.banneropt as bannerOption,
            bannerData.bannerName
        from account, profile, signon,bannerdata
        where account.userId = #{param1}
            and signon.password = #{param2}
            and signon.userName = account.userId
            and profile.userId = account.userId
            and profile.favcategory = bannerData.favcategory
    </select>
    
    <update id="updateAccount" parameterType="Account">
        update account set
            email = #{email},
            firstName = #{firstName},
            lastName = #{lastName},
            status = #{status},
            addr1 = #{address1},
            addr2 = #{address2, jdbcType=VARCHAR},
            city = #{city},
            state = #{state},
            zip = #{zip},
            country = #{country},
            phone = #{phone}
        where userId = #{username}
    </update>
    
    <insert id="insertAccount" parameterType="Account">
        insert into account(
            email,
            firstName,
            lastName,
            status,
            addr1,
            addr2,
            city,
            state,
            zip,
            country,
            phone,
            userId
        )
        values(
            #{email},
            #{firstName},
            #{lastName},
            #{status},
            #{address1},
            #{address2,jdbcType=VARCHAR},
            #{city},
            #{state},
            #{zip},
            #{country},
            #{phone},
            #{username}
        )
    </insert>
    
    <update id="updateProfile" parameterType="Account">
        update profile set
            langpref = #{languagePreference},
            favcategory = #{favouriteCategoryId}
        where userId = #{username}
    </update>

    <insert id="insertProfile" parameterType="Account">
        insert into profile(
            langpref,
            favcategory,
            userid
        )
        values(
            #{languagePreference},
            #{favouriteCategoryId},
            #{username}
        )
    </insert>
    
    <update id="updateSignon" parameterType="Account">
        update signon set
            password = #{password}
        where username = #{username}
    </update>

    <insert id="insertSignon" parameterType="Account">
        insert into signon(
            password,
            username
        )
        values(
            #{password},
            #{username}
        )
    </insert>

    <select id="getAccountList" resultType="string">
        select distinct
            username
        from signon
    </select>

    <delete id="delAccountByUserId" parameterType="string">
        SET SQL_SAFE_UPDATES = 0,
        delete from account where userid = #{userId},
        delete from signon where username = #{userId}
    </delete>
</mapper>